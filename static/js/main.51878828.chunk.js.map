{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_STATE","Pomodoro","props","state","remainingMin","remainingSec","defaultFocusDuration","defaultRestDuration","completedPomos","runTimer","focusTimer","settingsOpen","resume","bind","pause","reset","triggerSettings","sessionIncrement","sessionDecrement","breakIncrement","breakDecrement","ReactGA","pageview","window","location","pathname","search","this","audioBeep","play","event","category","action","setState","clearInterval","interval","setInterval","tickSecond","currentTime","startButton","class","id","onClick","pauseButton","focusLabel","restLabel","settings","mainClass","pad","className","src","preload","ref","audio","React","Component","n","width","z","length","Array","join","App","useEffect","GA_INIT","initialize","set","page","Helmet","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51878828.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.scss';\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport ReactGA from 'react-ga';\n\nconst TITLE = \"Pomo Timer\";\nconst DEFAULT_STATE = {\n  remainingMin: 25,\n  remainingSec: 0,\n  defaultFocusDuration: 25,\n  defaultRestDuration: 5,\n  completedPomos: 0,\n  runTimer: false,\n  focusTimer: true,\n  settingsOpen: false\n};\n\nfunction usePageViews() {\n  useEffect(() => {\n    if(!window.GA_INIT) {\n      ReactGA.initialize(\"UA-186165133-1\");\n      window.GA_INIT = true;\n    }\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n}\n\nconst TICK_RATE = 1000; // default is 1s/1000ms\n\nclass Pomodoro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      remainingMin: DEFAULT_STATE.remainingMin,\n      remainingSec: DEFAULT_STATE.remainingSec,\n      defaultFocusDuration: DEFAULT_STATE.defaultFocusDuration,\n      defaultRestDuration: DEFAULT_STATE.defaultRestDuration,\n      completedPomos: DEFAULT_STATE.completedPomos,\n      runTimer: DEFAULT_STATE.runTimer,\n      focusTimer: DEFAULT_STATE.focusTimer, // true if focus, false if reset\n      settingsOpen: DEFAULT_STATE.settingsOpen\n    }\n    this.resume = this.resume.bind(this);\n    this.pause = this.pause.bind(this);\n    this.reset = this.reset.bind(this);\n    this.triggerSettings = this.triggerSettings.bind(this);\n    this.sessionIncrement = this.sessionIncrement.bind(this);\n    this.sessionDecrement = this.sessionDecrement.bind(this);\n    this.breakIncrement = this.breakIncrement.bind(this);\n    this.breakDecrement = this.breakDecrement.bind(this);\n  }\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }\n  tickSecond() { // tick one second\n    if(this.state.runTimer) {\n      if(this.state.remainingMin === 0 && this.state.remainingSec === 0) { // session complete\n        // play sound here\n        this.audioBeep.play();\n        if(this.state.focusTimer) { // Focus session completed\n          ReactGA.event({\n            category: 'Pomo Timer',\n            action: 'Completed focus session'\n          });\n          this.setState(state => ({\n            // switch to rest session\n            completedPomos: state.completedPomos + 1,\n            focusTimer: false,\n            remainingMin: this.state.defaultRestDuration\n          }));\n        } else { // Rest session completed\n          ReactGA.event({\n            category: 'Pomo Timer',\n            action: 'Completed rest session'\n          });\n          this.setState({\n            // switch to focus session\n            focusTimer: true,\n            remainingMin: this.state.defaultFocusDuration\n          });\n        }\n      } else {\n        if(this.state.remainingSec === 0) {\n          this.setState(state => ({\n            remainingMin: state.remainingMin - 1,\n            remainingSec: 59\n          }))\n        } else {\n          this.setState(state => ({\n            remainingSec: state.remainingSec - 1\n          }))\n        }\n      }\n    }\n  }\n  resume() {\n    ReactGA.event({\n      category: 'Pomo Timer',\n      action: 'Pressed start/resume'\n    });\n    if(this.state.runTimer) { this.setState( { runTimer: false } ); }\n    else {\n      this.setState( { runTimer: true } );\n      clearInterval(this.interval); // prevent interval stacking\n      this.interval = setInterval(() => this.tickSecond(), TICK_RATE); // tick per 1000ms\n    }\n  }\n  pause() {\n    ReactGA.event({\n      category: 'Pomo Timer',\n      action: 'Pressed pause'\n    });\n    this.setState( { runTimer: false } );\n  }\n  reset() {\n    ReactGA.event({\n      category: 'Pomo Timer',\n      action: 'Pressed reset'\n    });\n    this.audioBeep.currentTime = 0;\n    this.audioBeep.pause();\n    this.setState({\n      remainingMin: DEFAULT_STATE.remainingMin,\n      remainingSec: DEFAULT_STATE.remainingSec,\n      defaultFocusDuration: DEFAULT_STATE.defaultFocusDuration,\n      defaultRestDuration: DEFAULT_STATE.defaultRestDuration,\n      completedPomos: DEFAULT_STATE.completedPomos,\n      runTimer: DEFAULT_STATE.runTimer,\n      focusTimer: DEFAULT_STATE.focusTimer,\n      settingsOpen: DEFAULT_STATE.settingsOpen\n    });\n  }\n  triggerSettings() {\n    ReactGA.event({\n      category: 'Pomo Timer',\n      action: 'Clicked settings'\n    });\n    this.setState(state => ({\n      settingsOpen: !state.settingsOpen\n    }))\n  }\n  sessionIncrement() {\n    if(this.state.defaultFocusDuration < 60 && !this.state.runTimer) { \n      this.setState(state => ({ defaultFocusDuration: state.defaultFocusDuration + 1 }));\n      if(this.state.focusTimer) { this.setState(state => ({ remainingMin: state.defaultFocusDuration, remainingSec: 0 }))}\n    }\n  }\n  sessionDecrement() {\n    if(this.state.defaultFocusDuration > 1 && !this.state.runTimer) {\n      this.setState(state => ({ defaultFocusDuration: state.defaultFocusDuration - 1}));\n      if(this.state.focusTimer) { this.setState(state => ({ remainingMin: state.defaultFocusDuration, remainingSec: 0 }))}\n    }\n  }\n  breakIncrement() {\n    if(this.state.defaultRestDuration < 60 && !this.state.runTimer) {\n      this.setState(state => ({ defaultRestDuration: state.defaultRestDuration + 1 }));\n      if(!this.state.focusTimer) { this.setState(state => ({ remainingMin: state.defaultRestDuration, remainingSec: 0 }))}\n    }\n  }\n  breakDecrement() {\n    if(this.state.defaultRestDuration > 1 && !this.state.runTimer) {\n      this.setState(state => ({ defaultRestDuration: state.defaultRestDuration - 1 }));\n      if(!this.state.focusTimer) { this.setState(state => ({ remainingMin: state.defaultRestDuration, remainingSec: 0 }))}\n    }\n  }\n  render() {\n    const startButton = <div class=\"button\" id=\"start_stop\" onClick={this.resume}>Start</div>;\n    const pauseButton = <div class=\"button\" id=\"start_stop\" onClick={this.resume}>Pause</div>;\n    \n    const focusLabel = <div id=\"timer-label\"><strong>Focus</strong><i class=\"fas fa-fire\"></i></div>;\n    const restLabel = <div id=\"timer-label\">Rest</div>;\n    \n    const settings = \n          <div class=\"settings-overlay\">\n            <div class=\"settings-div\">\n              <div id=\"session-label\">Focus Length: &nbsp;</div>\n              <div id=\"session-length\">{this.state.defaultFocusDuration}</div>\n              <div class=\"adjust-button\" id=\"session-increment\" onClick={this.sessionIncrement}><i class=\"fas fa-plus\"></i></div>\n              <div class=\"adjust-button\" id=\"session-decrement\" onClick={this.sessionDecrement}><i class=\"fas fa-minus\"></i></div>\n              <div id=\"break-label\">Rest Length: &nbsp;</div>\n              <div id=\"break-length\">{this.state.defaultRestDuration}</div>\n              <div class=\"adjust-button\" id=\"break-increment\" onClick={this.breakIncrement}><i class=\"fas fa-plus\"></i></div>\n              <div class=\"adjust-button\" id=\"break-decrement\" onClick={this.breakDecrement}><i class=\"fas fa-minus\"></i></div>\n            </div>\n            <div id=\"close-button\" class=\"button\" onClick={this.triggerSettings}>Close</div>\n          </div>;\n    \n    let mainClass = \"\";\n    \n    if(this.state.focusTimer) { mainClass = \"main bg-color-red\" }\n    else { mainClass = \"main bg-color-green\" }\n    \n    return (\n      <div class={mainClass}>\n        <div class=\"container\">\n          <div class=\"title\">\n            \n          </div>\n          { this.state.focusTimer ? focusLabel : restLabel }\n          <div id=\"time-left\">\n            {pad(this.state.remainingMin, 2)}:{pad(this.state.remainingSec, 2)}\n          </div>\n          <div class=\"stats\">\n            Pomos: {this.state.completedPomos}\n            {this.state.completedPomos > 0 && <span class=\"emoji\">&#x1F345;</span>}\n          </div>\n          <div class=\"control-div\">\n            <div class=\"top-control-div\">\n              { this.state.runTimer ? pauseButton : startButton }\n            </div>\n            <div class=\"bottom-control-div\">\n              <div class=\"button\" id=\"settings\" onClick={this.triggerSettings}>Settings</div>\n              <div class=\"button\" id=\"reset\" onClick={this.reset}>Reset</div>\n            </div>\n          </div>\n        </div>\n        { this.state.settingsOpen && settings }\n        <div className=\"credit\">\n          Coded and designed by <u>Kurt Choi</u>\n        </div>\n        <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" preload=\"auto\" ref={(audio) => {this.audioBeep = audio}}/>\n      </div>\n      \n    )\n  }\n}\n\nfunction pad(n, width, z) {\n  z = z || '0';\n  n = n + '';\n  return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;\n}\n\nfunction App() {\n  usePageViews();\n\n  return (\n    <div className=\"App\">\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <Pomodoro />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}